package com.btg.osinergmin.siged.domain;

import java.io.Serializable;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

@Entity
@Table(name="tipoproceso")
@NamedQueries({@NamedQuery(name="Tipoproceso.findAll",query="SELECT t FROM Tipoproceso t order by nombre"),@NamedQuery(name="Tipoproceso.findByIdtipoproceso",query="SELECT t FROM Tipoproceso t WHERE t.idtipoproceso = :idtipoproceso order by nombre"),@NamedQuery(name="Tipoproceso.findByNombre",query="SELECT t FROM Tipoproceso t WHERE t.nombre = :nombre"),@NamedQuery(name="Tipoproceso.findByDescripcion",query="SELECT t FROM Tipoproceso t WHERE t.descripcion = :descripcion"),@NamedQuery(name="Tipoproceso.findByEstado",query="SELECT t FROM Tipoproceso t WHERE t.estado = :estado order by nombre")})
public class Tipoproceso implements Serializable{

	private static final long serialVersionUID=1L;
	@Id
	@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="TIPOPROCESO_SEQ")
	@SequenceGenerator(name="TIPOPROCESO_SEQ",sequenceName="TIPOPROCESO_SEQ",initialValue=1,allocationSize=1)
	// @GeneratedValue(strategy = GenerationType.IDENTITY)
	@Basic(optional=false)
	@Column(name="idtipoproceso")
	private Integer idtipoproceso;
	@Basic(optional=false)
	@Column(name="nombre")
	private String nombre;
	@Column(name="descripcion")
	private String descripcion;
	@Basic(optional=false)
	@Column(name="estado")
	private char estado;
	@OneToMany(cascade=CascadeType.ALL,mappedBy="tipoproceso")
	private List<Proceso> procesoList;

	public Tipoproceso(){
	}

	public Tipoproceso(Integer idtipoproceso){
		this.idtipoproceso=idtipoproceso;
	}

	public Tipoproceso(Integer idtipoproceso,String nombre,char estado){
		this.idtipoproceso=idtipoproceso;
		this.nombre=nombre;
		this.estado=estado;
	}

	public Integer getIdtipoproceso(){
		return idtipoproceso;
	}

	public void setIdtipoproceso(Integer idtipoproceso){
		this.idtipoproceso=idtipoproceso;
	}

	public String getNombre(){
		return nombre;
	}

	public void setNombre(String nombre){
		this.nombre=nombre;
	}

	public String getDescripcion(){
		return descripcion;
	}

	public void setDescripcion(String descripcion){
		this.descripcion=descripcion;
	}

	public char getEstado(){
		return estado;
	}

	public void setEstado(char estado){
		this.estado=estado;
	}

	public void setEstado(Character estado){
		if(estado != null){
			this.estado=estado;
		}
	}

	public List<Proceso> getProcesoList(){
		return procesoList;
	}

	public void setProcesoList(List<Proceso> procesoList){
		this.procesoList=procesoList;
	}

	@Override
	public int hashCode(){
		int hash=0;
		hash+=(idtipoproceso != null ? idtipoproceso.hashCode() : 0);
		return hash;
	}

	@Override
	public boolean equals(Object object){
		// TODO: Warning - this method won't work in the case the id fields are
		// not set
		if(!(object instanceof Tipoproceso)){
			return false;
		}
		Tipoproceso other=(Tipoproceso) object;
		if((this.idtipoproceso == null && other.idtipoproceso != null) || (this.idtipoproceso != null && !this.idtipoproceso.equals(other.idtipoproceso))){
			return false;
		}
		return true;
	}

	@Override
	public String toString(){
		return "[" + this.nombre + "]";
	}
}
