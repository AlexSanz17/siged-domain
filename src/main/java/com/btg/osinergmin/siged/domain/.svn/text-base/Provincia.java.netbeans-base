package com.btg.osinergmin.siged.domain;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

@Entity
@Table(name="provincia")
@NamedQueries({@NamedQuery(name="Provincia.findAll",query="SELECT p FROM Provincia p"),@NamedQuery(name="Provincia.findByIdprovincia",query="SELECT p FROM Provincia p WHERE p.idprovincia = :idprovincia"),@NamedQuery(name="Provincia.findByNombre",query="SELECT p FROM Provincia p WHERE p.nombre = :nombre")})
public class Provincia implements Serializable{

	private static final long serialVersionUID=1L;
	@Id
	/*
	 * @GeneratedValue(strategy = GenerationType.SEQUENCE, generator =
	 * "PROVINCIA_SEQ")
	 * 
	 * @SequenceGenerator(name = "PROVINCIA_SEQ", sequenceName =
	 * "PROVINCIA_SEQ", initialValue = 1,allocationSize=1)
	 */
	// @GeneratedValue(strategy = GenerationType.IDENTITY)
	@Basic(optional=false)
	@Column(name="idprovincia")
	private Integer idprovincia;
	@Basic(optional=false)
	@Column(name="nombre")
	private String nombre;
	/*
	 * @OneToMany(cascade = CascadeType.ALL, mappedBy = "provincia") private
	 * List<Distrito> distritoList;
	 */
	@JoinColumn(name="departamento",referencedColumnName="iddepartamento")
	@ManyToOne(optional=false,fetch=FetchType.EAGER)
	private Departamento departamento;

	/*
	 * Constructors
	 */
	public Provincia(){
	}

	public Provincia(Integer idprovincia){
		this.idprovincia=idprovincia;
	}

	public Provincia(Integer iIdProvincia,String sNombre){
		this.idprovincia=iIdProvincia;
		this.nombre=sNombre;
	}

	/*
	 * Getters & Setters
	 */
	public Integer getIdprovincia(){
		return idprovincia;
	}

	public void setIdprovincia(Integer idprovincia){
		this.idprovincia=idprovincia;
	}

	public String getNombre(){
		return nombre;
	}

	public void setNombre(String nombre){
		this.nombre=nombre;
	}

	/*
	 * public List<Distrito> getDistritoList() { return distritoList; }
	 * 
	 * public void setDistritoList(List<Distrito> distritoList) {
	 * this.distritoList = distritoList; }
	 */
	public Departamento getDepartamento(){
		return departamento;
	}

	public void setDepartamento(Departamento departamento){
		this.departamento=departamento;
	}

	@Override
	public int hashCode(){
		int hash=0;
		hash+=(idprovincia != null ? idprovincia.hashCode() : 0);
		return hash;
	}

	@Override
	public boolean equals(Object object){
		// TODO: Warning - this method won't work in the case the id fields are
		// not set
		if(!(object instanceof Provincia)){
			return false;
		}
		Provincia other=(Provincia) object;
		if((this.idprovincia == null && other.idprovincia != null) || (this.idprovincia != null && !this.idprovincia.equals(other.idprovincia))){
			return false;
		}
		return true;
	}

	@Override
	public String toString(){
		return "org.osinerg.pojos.Provincia[idprovincia=" + idprovincia + "]";
	}
}
