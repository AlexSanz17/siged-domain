package com.btg.osinergmin.siged.domain;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

@Entity
@Table(name="mensajeria")
@NamedQueries({@NamedQuery(name="Mensajeria.findAll",query="SELECT m FROM Mensajeria m"),@NamedQuery(name="Mensajeria.findByIdmensajeria",query="SELECT m FROM Mensajeria m WHERE m.idmensajeria = :idmensajeria"),@NamedQuery(name="Mensajeria.findByNumerointerno",query="SELECT m FROM Mensajeria m WHERE m.numerointerno = :numerointerno"),@NamedQuery(name="Mensajeria.findByEstado",query="SELECT m FROM Mensajeria m WHERE m.estado = :estado"),@NamedQuery(name="Mensajeria.findByEstadoDocPrincipal",query="SELECT m FROM Mensajeria m WHERE m.estado = :estado AND m.docprincipal = :docprincipal"),@NamedQuery(name="Mensajeria.findByEstadoingreso",query="SELECT m FROM Mensajeria m WHERE m.estadoingreso = :estadoingreso"),@NamedQuery(name="Mensajeria.findByTipodocumento",query="SELECT m FROM Mensajeria m WHERE m.tipodocumento = :tipodocumento"),@NamedQuery(name="Mensajeria.findByNumerodocumento",query="SELECT m FROM Mensajeria m WHERE m.numerodocumento = :numerodocumento"),
		@NamedQuery(name="Mensajeria.findByDestinatario",query="SELECT m FROM Mensajeria m WHERE m.destinatario = :destinatario"),@NamedQuery(name="Mensajeria.findByDirecciondestino",query="SELECT m FROM Mensajeria m WHERE m.direcciondestino = :direcciondestino"),@NamedQuery(name="Mensajeria.findByAsunto",query="SELECT m FROM Mensajeria m WHERE m.asunto = :asunto"),@NamedQuery(name="Mensajeria.findByFechaderivacion",query="SELECT m FROM Mensajeria m WHERE m.fechaderivacion = :fechaderivacion"),@NamedQuery(name="Mensajeria.findByidusuario",query="SELECT m FROM Mensajeria m WHERE m.idusuario.idusuario = :idusuario"),@NamedQuery(name="Mensajeria.findByidusuarioDocPrincipal",query="SELECT m FROM Mensajeria m WHERE m.idusuario.idusuario = :idusuario AND m.docprincipal = :docprincipal"),@NamedQuery(name="Mensajeria.findByIddocumento",query="SELECT m FROM Mensajeria m WHERE m.iddocumento = :iddocumento")})
public class Mensajeria implements Serializable{

	private static final long serialVersionUID=1L;

	@Id
	@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="MENSAJERIA_SEQ")
	@SequenceGenerator(name="MENSAJERIA_SEQ",sequenceName="MENSAJERIA_SEQ",initialValue=1,allocationSize=1)
	// @GeneratedValue(strategy = GenerationType.IDENTITY)
	@Basic(optional=false)
	@Column(name="idmensajeria")
	private Integer idmensajeria;

	@Column(name="numerointerno")
	private String numerointerno;

	@Column(name="estado")
	private Character estado;

	@Column(name="estadoingreso")
	private Character estadoingreso;

	@Column(name="tipodocumento")
	private String tipodocumento;

	@Column(name="numerodocumento")
	private String numerodocumento;

	@Column(name="destinatario")
	private String destinatario;

	@Column(name="direcciondestino")
	private String direcciondestino;

	@Column(name="departamento")
	private String departamento;

	@Column(name="provincia")
	private String provincia;

	@Column(name="distrito")
	private String distrito;

	@Column(name="asunto")
	private String asunto;

	@Column(name="fechaderivacion")
	@Temporal(TemporalType.TIMESTAMP)
	private Date fechaderivacion;

	@Column(name="iddocumento")
	private Integer iddocumento;
	@OneToOne(cascade=CascadeType.ALL,mappedBy="mensajeria",fetch=FetchType.LAZY)
	private Envio envio;
	@OneToOne(cascade=CascadeType.ALL,mappedBy="mensajeria",fetch=FetchType.LAZY)
	private Cargo cargo;

	@JoinColumn(name="idusuario",referencedColumnName="idusuario")
	@ManyToOne(optional=true,fetch=FetchType.LAZY)
	private Usuario idusuario;
	@OneToOne(cascade=CascadeType.ALL,mappedBy="mensajeria",fetch=FetchType.LAZY)
	private Datos datos;

	@Column(name="aviso")
	private Character aviso;

	@Column(name="docprincipal")
	private Character docprincipal;

	@Column(name="idmensajeriaprincipal")
	private Integer idmensajeriaprincipal;
	@Column(name="referenciadireccioncliente")
	private String referenciaDireccionCliente;

	// @JoinColumn(name = "idambitoenvio", referencedColumnName =
	// "idambitoenvio")
	// @ManyToOne(fetch=FetchType.LAZY, cascade = CascadeType.REFRESH, optional
	// = true)
	// private AmbitoEnvio ambitoEnvio;
	@Column(name="idambitoenvio")
	private Integer idambitoenvio;

	@JoinColumn(name="idtipoenvio",referencedColumnName="idtipoenvio")
	@ManyToOne(fetch=FetchType.LAZY,optional=true)
	private Tipoenvio idtipoenvio;

	// @JoinColumn(name = "idcliente", referencedColumnName = "idcliente")
	// @ManyToOne(fetch = FetchType.LAZY ,cascade = CascadeType.REFRESH,
	// optional = true)
	// private Cliente idcliente;

	@Column(name="idcliente")
	private Integer idcliente;

	public Mensajeria(){
	}

	public Mensajeria(Integer idmensajeria){
		this.idmensajeria=idmensajeria;
	}

	public Integer getIdmensajeria(){
		return idmensajeria;
	}

	public void setIdmensajeria(Integer idmensajeria){
		this.idmensajeria=idmensajeria;
	}

	public String getNumerointerno(){
		return numerointerno;
	}

	public void setNumerointerno(String numerointerno){
		this.numerointerno=numerointerno;
	}

	public Character getEstado(){
		return estado;
	}

	public void setEstado(Character estado){
		this.estado=estado;
	}

	public Character getEstadoingreso(){
		return estadoingreso;
	}

	public void setEstadoingreso(Character estadoingreso){
		this.estadoingreso=estadoingreso;
	}

	public String getTipodocumento(){
		return tipodocumento;
	}

	public void setTipodocumento(String tipodocumento){
		this.tipodocumento=tipodocumento;
	}

	public String getNumerodocumento(){
		return numerodocumento;
	}

	public void setNumerodocumento(String numerodocumento){
		this.numerodocumento=numerodocumento;
	}

	public String getDestinatario(){
		return destinatario;
	}

	public void setDestinatario(String destinatario){
		this.destinatario=destinatario;
	}

	public String getDirecciondestino(){
		return direcciondestino;
	}

	public void setDirecciondestino(String direcciondestino){
		this.direcciondestino=direcciondestino;
	}

	public String getDepartamento(){
		return departamento;
	}

	public void setDepartamento(String departamento){
		this.departamento=departamento;
	}

	public String getProvincia(){
		return provincia;
	}

	public void setProvincia(String provincia){
		this.provincia=provincia;
	}

	public String getDistrito(){
		return distrito;
	}

	public void setDistrito(String distrito){
		this.distrito=distrito;
	}

	public String getAsunto(){
		return asunto;
	}

	public void setAsunto(String asunto){
		this.asunto=asunto;
	}

	public Date getFechaderivacion(){
		return fechaderivacion;
	}

	public void setFechaderivacion(Date fechaderivacion){
		this.fechaderivacion=fechaderivacion;
	}

	public Integer getIddocumento(){
		return iddocumento;
	}

	public void setIddocumento(Integer iddocumento){
		this.iddocumento=iddocumento;
	}

	public Envio getEnvio(){
		return envio;
	}

	public void setEnvio(Envio envio){
		this.envio=envio;
	}

	public Cargo getCargo(){
		return cargo;
	}

	public void setCargo(Cargo cargo){
		this.cargo=cargo;
	}

	public Usuario getIdusuario(){
		return idusuario;
	}

	public void setIdusuario(Usuario idusuario){
		this.idusuario=idusuario;
	}

	public Datos getDatos(){
		return datos;
	}

	public void setDatos(Datos datos){
		this.datos=datos;
	}

	public void setAviso(Character aviso){
		this.aviso=aviso;
	}

	public Character getAviso(){
		return aviso;
	}

	public Character getDocprincipal(){
		return docprincipal;
	}

	public void setDocprincipal(Character docprincipal){
		this.docprincipal=docprincipal;
	}

	public Integer getIdmensajeriaprincipal(){
		return idmensajeriaprincipal;
	}

	public void setIdmensajeriaprincipal(Integer idmensajeriaprincipal){
		this.idmensajeriaprincipal=idmensajeriaprincipal;
	}

	public Tipoenvio getIdtipoenvio(){
		return idtipoenvio;
	}

	public void setIdtipoenvio(Tipoenvio idtipoenvio){
		this.idtipoenvio=idtipoenvio;
	}

	@Override
	public int hashCode(){
		int hash=0;
		hash+=(idmensajeria != null ? idmensajeria.hashCode() : 0);
		return hash;
	}

	@Override
	public boolean equals(Object object){
		if(!(object instanceof Mensajeria)){
			return false;
		}
		Mensajeria other=(Mensajeria) object;
		if((this.idmensajeria == null && other.idmensajeria != null) || (this.idmensajeria != null && !this.idmensajeria.equals(other.idmensajeria))){
			return false;
		}
		return true;
	}

	@Override
	public String toString(){
		return "org.osinerg.pojos.Mensajeria[idmensajeria=" + idmensajeria + "]";
	}

	/**
	 * @return the referenciaDireccionCliente
	 */
	public String getReferenciaDireccionCliente(){
		return referenciaDireccionCliente;
	}

	/**
	 * @param referenciaDireccionCliente
	 *            the referenciaDireccionCliente to set
	 */
	public void setReferenciaDireccionCliente(String referenciaDireccionCliente){
		this.referenciaDireccionCliente=referenciaDireccionCliente;
	}

	/**
	 * @return the ambitoEnvio
	 */
	/*
	 * public AmbitoEnvio getAmbitoEnvio() { return ambitoEnvio; }
	 * 
	 * 
	 * public void setAmbitoEnvio(AmbitoEnvio ambitoEnvio) { this.ambitoEnvio =
	 * ambitoEnvio; }
	 */

	public void setIdcliente(Integer idcliente){
		this.idcliente=idcliente;
	}

	public Integer getIdcliente(){
		return idcliente;
	}

	public void setIdambitoenvio(Integer idambitoenvio){
		this.idambitoenvio=idambitoenvio;
	}

	public Integer getIdambitoenvio(){
		return idambitoenvio;
	}

}
